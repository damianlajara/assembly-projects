64 bit Text-based I/O Pseudo-code
------------------------------------
create prototypes for irvine functions
create initialized data for prompts
create un-initialized data for user input

start main
set rdx to the last name initial prompt
print it out
read one character from user
store it in variable for L Initial

set rdx to the first name initial prompt
print it out
read one character from user
store it in variable for F Initial

set rdx to the middle name initial prompt
print it out
read one character from user
store it in variable for M Initial

print out lInitial followed by a newline ;call write procedures
print out FInitial followed by a newline
print out MInitial followed by a newline

set rdx to the last name prompt
print it
set rdx to last name buffer
read string from user and store it in the last name variable

set rdx to the first name prompt
print it
set rdx to first name buffer and store it in the first name variable
read string from user

set rdx to the middle name prompt
print it
set rdx to middle name buffer
read string from user and store it in the middle name variable

set rdx to the print name prompt; show a message showing what the name is going to be
print out last name followed by a newline; call write procedures
print out first name followed by a newline
print out middle name followed by a newline
return 0;
end main